window.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;class Idb{constructor(e,t){this.jsonUrl="http://localhost:1337/",this.dbName=e,this.dbVersion=t,this.idb=null,this.db=null,this.openDb().then(()=>{"rr-restaurants"===this.dbName&&this.fillDb()})}openDb(){return new Promise((e,t)=>{this.idb=window.indexedDB.open(this.dbName,this.dbVersion),this.idb.onsuccess=(t=>{this.db=t.target.result,e()}),this.idb.onerror=(e=>{console.error("openDb: ",e.target.errorCode),t()}),this.idb.onupgradeneeded=(e=>{const t=e.target.result.createObjectStore(this.dbName,{keyPath:"id"});"rr-restaurants"===this.dbName?(t.createIndex("neighborhood","neighborhood"),t.createIndex("cuisine_type","cuisine_type"),t.createIndex("neighborhood_cuisine_type",["neighborhood","cuisine_type"])):"rr-reviews"===this.dbName&&t.createIndex("restaurant_id","restaurant_id")})})}getDbR(){return this.db.transaction(this.dbName).objectStore(this.dbName)}getDbRW(){return this.db.transaction(this.dbName,"readwrite").objectStore(this.dbName)}getAll(){return new Promise((e,t)=>{const r=this.getDbR().getAll();r.onsuccess=(()=>{e(r.result)}),r.onerror=(()=>{t("Error getAll")})})}getById(e){return new Promise((t,r)=>{const s=this.getDbR().get(parseInt(e));s.onsuccess=(()=>{t(s.result)}),s.onerror=(()=>{r("Error getById")})})}sendReview(e){return new Promise((t,r)=>{fetch(`${this.jsonUrl}reviews/`,{method:"POST",body:JSON.stringify(e),headers:{"content-type":"application/json"}}).then(e=>e.json()).then(e=>{t(e)}).catch(()=>{r(e)})})}setFavoriteById(e,t=!0){return new Promise((r,s)=>{this.getById(e).then(e=>{e.is_favorite=t;const n=this.getDbRW().put(e);n.onsuccess=(()=>{fetch(`${this.jsonUrl}restaurants/${e.id}/?is_favorite=${t.toString()}`,{method:"PUT"}).then(()=>{r()}).catch(()=>{r()})}),n.onerror=(()=>{s("Error setFavoriteById")})}).catch(e=>{s(e)})})}getByIndex(e,t){return new Promise((r,s)=>{const n=this.getDbR().index(e).getAll(t);n.onsuccess=(()=>{r(n.result)}),n.onerror=(()=>{s("Error getByIndex")})})}getReviewByIndex(e,t){return new Promise((r,s)=>{fetch(`${this.jsonUrl}reviews/?restaurant_id=${t}`).then(e=>e.json()).then(e=>{if(e.length>0){const t=this.getDbRW();e.forEach(e=>{t.put(e)}),r(e)}else s("Error getReviewByIndex")}).catch(()=>{const n=this.getDbR().index(e).getAll(t);n.onsuccess=(()=>{n.result.length>0&&r(n.result)}),n.onerror=(()=>{s()})})})}fillDb(){fetch(`${this.jsonUrl}restaurants`).then(e=>e.json()).then(e=>{if(e.length>0){const t=this.getDbRW();e.forEach(e=>{t.put(e)})}})}}window.idb=new Idb("rr-restaurants",1),window.reviewIdb=new Idb("rr-reviews",1);